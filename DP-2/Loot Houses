A thief wants to loot houses. He knows the amount of money in each house. He cannot loot two consecutive houses. Find the maximum amount of money he can loot.


#include<bits/stdc++.h>
int max( int a, int b )
{
    return a>b?a:b;
}
//dp
int getmaxmoney(int arr[], int n, int*  dp)
{
    dp[0]=arr[0];
    dp[1]=max(arr[0],arr[1]);
    
    for(int i=2 ;i< n ;i++)
    {
        dp[i]=max(dp[i-1],dp[i-2]+arr[i]);
      }
    return dp[n-1];
}
int getMaxMoney(int arr[], int n)
{
    int  dp[n];
    
   return getmaxmoney(arr,n, dp);
}


// recursive

int getMaxMoney(int arr[], int n){

    if(n<=0) return 0;
    
   int a= getMaxMoney(arr+2,n-2);
    int b=getMaxMoney(arr+1,n-1);
    
    return max(a+arr[0] , b);
}
